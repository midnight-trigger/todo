// Code generated by MockGen. DO NOT EDIT.
// Source: todos.go

// Package mock_mysql is a generated GoMock package.
package mock_mysql

import (
	gomock "github.com/golang/mock/gomock"
	mysql "github.com/midnight-trigger/todo/infra/mysql"
	reflect "reflect"
)

// MockITodos is a mock of ITodos interface
type MockITodos struct {
	ctrl     *gomock.Controller
	recorder *MockITodosMockRecorder
}

// MockITodosMockRecorder is the mock recorder for MockITodos
type MockITodosMockRecorder struct {
	mock *MockITodos
}

// NewMockITodos creates a new mock instance
func NewMockITodos(ctrl *gomock.Controller) *MockITodos {
	mock := &MockITodos{ctrl: ctrl}
	mock.recorder = &MockITodosMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockITodos) EXPECT() *MockITodosMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockITodos) Create(todo *mysql.Todos) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", todo)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockITodosMockRecorder) Create(todo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockITodos)(nil).Create), todo)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: cognito.go

// Package mock_cognito is a generated GoMock package.
package mock_cognito

import (
	cognitoidentityprovider "github.com/aws/aws-sdk-go/service/cognitoidentityprovider"
	gomock "github.com/golang/mock/gomock"
	definition "github.com/midnight-trigger/todo/api/definition"
	reflect "reflect"
)

// MockICognito is a mock of ICognito interface
type MockICognito struct {
	ctrl     *gomock.Controller
	recorder *MockICognitoMockRecorder
}

// MockICognitoMockRecorder is the mock recorder for MockICognito
type MockICognitoMockRecorder struct {
	mock *MockICognito
}

// NewMockICognito creates a new mock instance
func NewMockICognito(ctrl *gomock.Controller) *MockICognito {
	mock := &MockICognito{ctrl: ctrl}
	mock.recorder = &MockICognitoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockICognito) EXPECT() *MockICognitoMockRecorder {
	return m.recorder
}

// SignUp mocks base method
func (m *MockICognito) SignUp(body *definition.PostSignupUserRequestBody) (*cognitoidentityprovider.SignUpOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignUp", body)
	ret0, _ := ret[0].(*cognitoidentityprovider.SignUpOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignUp indicates an expected call of SignUp
func (mr *MockICognitoMockRecorder) SignUp(body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignUp", reflect.TypeOf((*MockICognito)(nil).SignUp), body)
}

// AdminInitiateAuth mocks base method
func (m *MockICognito) AdminInitiateAuth(body *definition.PostSigninUserRequestBody) (*cognitoidentityprovider.AdminInitiateAuthOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdminInitiateAuth", body)
	ret0, _ := ret[0].(*cognitoidentityprovider.AdminInitiateAuthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AdminInitiateAuth indicates an expected call of AdminInitiateAuth
func (mr *MockICognitoMockRecorder) AdminInitiateAuth(body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdminInitiateAuth", reflect.TypeOf((*MockICognito)(nil).AdminInitiateAuth), body)
}
